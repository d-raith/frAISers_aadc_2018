<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<graph_file xmlns="adtf/xsd/graph">
  <file_version>
    <major>1</major>
    <minor>0</minor>
  </file_version>
  <name>keyboard_remote_graph</name>
  <graphs>
    <graph>
      <name>KeyboardFilterGraph</name>
      <filters>
        <filter>
          <name>Wheel converter</name>
          <class_id>converter_wheels.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
            <pin>
              <name>speed_control</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>vehicle_speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>WheelSpeedController</name>
          <class_id>wheel_speed_controller.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>measured_vehicle_speed</name>
            </pin>
            <pin>
              <name>desired_vehicle_speed</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>actuator_output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>KeyboardRemoteFilter</name>
          <class_id>keyboard_remote.filter.user.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>steering</name>
            </pin>
            <pin>
              <name>headlights</name>
            </pin>
            <pin>
              <name>hazard lights</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>left wheel</name>
          <portname>wheel_left</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>right wheel</name>
          <portname>wheel_right</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>speed out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>headlights</name>
          <portname>headlights_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>hazard lights</name>
          <portname>hazard_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>measured speed</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>target speed</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>left wheel._Wheel converter.wheel_left</name>
          <source_connector_path>
            <connector/>
            <component>left wheel</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_left</connector>
            <component>Wheel converter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>right wheel._Wheel converter.wheel_right</name>
          <source_connector_path>
            <connector/>
            <component>right wheel</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_right</connector>
            <component>Wheel converter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Wheel converter.vehicle_speed_measured speed.</name>
          <source_connector_path>
            <connector>vehicle_speed</connector>
            <component>Wheel converter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>measured speed</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>measured speed._WheelSpeedController.measured_vehicle_speed</name>
          <source_connector_path>
            <connector/>
            <component>measured speed</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>measured_vehicle_speed</connector>
            <component>WheelSpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>target speed._WheelSpeedController.desired_vehicle_speed</name>
          <source_connector_path>
            <connector/>
            <component>target speed</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>desired_vehicle_speed</connector>
            <component>WheelSpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>WheelSpeedController.actuator_output_speed out.</name>
          <source_connector_path>
            <connector>actuator_output</connector>
            <component>WheelSpeedController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>target speed._Wheel converter.speed_control</name>
          <source_connector_path>
            <connector/>
            <component>target speed</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed_control</connector>
            <component>Wheel converter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>KeyboardRemoteFilter.speed_target speed.</name>
          <source_connector_path>
            <connector>speed</connector>
            <component>KeyboardRemoteFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>target speed</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>KeyboardRemoteFilter.steering_steering out.</name>
          <source_connector_path>
            <connector>steering</connector>
            <component>KeyboardRemoteFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>KeyboardRemoteFilter.headlights_headlights.</name>
          <source_connector_path>
            <connector>headlights</connector>
            <component>KeyboardRemoteFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>headlights</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>KeyboardRemoteFilter.hazard lights_hazard lights.</name>
          <source_connector_path>
            <connector>hazard lights</connector>
            <component>KeyboardRemoteFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>hazard lights</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
  </graphs>
  <streaming_graphs>
    <streaming_graph>
      <name>KeyboardStreamingGraph</name>
      <streaming_sources>
        <streaming_source>
          <name>Arduino EgoMotion Sensor</name>
          <class_id>arduino_egomotion_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>wheel_left</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>wheel_right</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports>
        <sample_stream>
          <name>speed_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>steering_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>headlights_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>siren_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>hazard_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_out_ports>
      <streaming_sinks>
        <streaming_sink>
          <name>Car Controller</name>
          <class_id>arduino_actuator.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>steering</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>head_light</name>
            </pin>
            <pin>
              <name>hazard_light</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams/>
      <connections>
        <connection>
          <name>Filter Graph Dock.speed_out_Car Controller.speed</name>
          <source_connector_path>
            <connector>speed_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.headlights_out_Car Controller.head_light</name>
          <source_connector_path>
            <connector>headlights_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>head_light</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.hazard_out_Car Controller.hazard_light</name>
          <source_connector_path>
            <connector>hazard_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>hazard_light</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_left_Filter Graph Dock.wheel_left</name>
          <source_connector_path>
            <connector>wheel_left</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_left</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_right_Filter Graph Dock.wheel_right</name>
          <source_connector_path>
            <connector>wheel_right</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_right</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.steering_out_Car Controller.steering</name>
          <source_connector_path>
            <connector>steering_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steering</connector>
            <component>Car Controller</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
  </streaming_graphs>
</graph_file>
