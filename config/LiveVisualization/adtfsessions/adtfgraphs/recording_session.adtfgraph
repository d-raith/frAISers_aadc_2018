<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<graph_file xmlns="adtf/xsd/graph">
  <file_version>
    <major>1</major>
    <minor>0</minor>
  </file_version>
  <name>recording_session</name>
  <graphs>
    <graph>
      <name>filter_graph_main</name>
      <filters>
        <filter>
          <name>ConverterWheels</name>
          <class_id>converter_wheels.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>wheel_right</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>speed_control</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>vehicle_speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>MarkerPosition</name>
          <class_id>demo_qt_media_description_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>position</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>WheelSpeedController</name>
          <class_id>wheel_speed_controller.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>measured_vehicle_speed</name>
            </pin>
            <pin>
              <name>desired_vehicle_speed</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>actuator_output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Car Controller</name>
          <class_id>car_controller.filter.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>speed</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs>
        <subgraph>
          <name>control</name>
          <graph>control_filter_graph</graph>
          <init_priority>0</init_priority>
        </subgraph>
        <subgraph>
          <name>perception</name>
          <graph>perception</graph>
          <init_priority>0</init_priority>
        </subgraph>
        <subgraph>
          <name>positioning</name>
          <graph>positioning</graph>
          <init_priority>0</init_priority>
        </subgraph>
      </subgraphs>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>video_rgb_in</name>
          <portname>video_rgb_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>imu_in</name>
          <portname>imu_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>wheel_left_in</name>
          <portname>wheel_left_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>wheel_right_in</name>
          <portname>wheel_right_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>ls_in</name>
          <portname>ls_in</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>jury_maneuver</name>
          <portname>jury_maneuver</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>jury_road_signs</name>
          <portname>jury_road_signs</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>jury_cmds</name>
          <portname>jury_cmds</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>jury_status</name>
          <portname>jury_status</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>video_undistorted</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>position</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_5</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_6</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_8</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_7</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>markers</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_10</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>jury_comm</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>jury_manouver_list</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>jury_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_14</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>perception_waypoints</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>network_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>birdseye_image</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>ls_data</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>ls_seg</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>det_info</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>wheel_right_in._ConverterWheels.wheel_right</name>
          <source_connector_path>
            <connector/>
            <component>wheel_right_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_right</connector>
            <component>ConverterWheels</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_left_in._ConverterWheels.wheel_left</name>
          <source_connector_path>
            <connector/>
            <component>wheel_left_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_left</connector>
            <component>ConverterWheels</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._Demo Qt Media Description Display.position</name>
          <source_connector_path>
            <connector/>
            <component>position</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>position</connector>
            <component>MarkerPosition</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._perception.undist_video</name>
          <source_connector_path>
            <connector/>
            <component>video_undistorted</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>undist_video</connector>
            <component>perception</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>imu_in._Sample Stream_2.</name>
          <source_connector_path>
            <connector/>
            <component>imu_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._positioning.imu_data</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>imu_data</connector>
            <component>positioning</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>positioning.position_Sample Stream_4.</name>
          <source_connector_path>
            <connector>position</connector>
            <component>positioning</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>position</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>positioning.undist_out_Sample Stream.</name>
          <source_connector_path>
            <connector>undist_out</connector>
            <component>positioning</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>video_undistorted</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._control.pos_in_ctrl</name>
          <source_connector_path>
            <connector/>
            <component>position</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>pos_in_ctrl</connector>
            <component>control</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>control.speed_out_Sample Stream_5.</name>
          <source_connector_path>
            <connector>desired_speed_out</connector>
            <component>control</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_6._steering_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>control.steering_out_Sample Stream_6.</name>
          <source_connector_path>
            <connector>steering_out</connector>
            <component>control</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>video_rgb_in._Sample Stream_8.</name>
          <source_connector_path>
            <connector/>
            <component>video_rgb_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_8</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_8._positioning.basler_rgb</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_8</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>basler_rgb</connector>
            <component>positioning</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>positioning.detected_marker_Sample Stream_9.</name>
          <source_connector_path>
            <connector>detected_marker</connector>
            <component>positioning</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>markers</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_9._control.road_signs_in_ctrl</name>
          <source_connector_path>
            <connector/>
            <component>markers</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>road_signs_in_ctrl</connector>
            <component>control</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>false</sync>
        </connection>
        <connection>
          <name>jury_road_signs._Sample Stream_10.</name>
          <source_connector_path>
            <connector/>
            <component>jury_road_signs</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_10</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_10._positioning.in_road_sign_map</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_10</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_road_sign_map</connector>
            <component>positioning</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jury_cmds._Sample Stream_11.</name>
          <source_connector_path>
            <connector/>
            <component>jury_cmds</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>jury_comm</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_11._control.jury_cmd_ctrl</name>
          <source_connector_path>
            <connector/>
            <component>jury_comm</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jury_cmd_ctrl</connector>
            <component>control</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>false</sync>
        </connection>
        <connection>
          <name>Sample Stream_10._control.jury_road_signs_ctrl</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_10</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jury_road_signs_ctrl</connector>
            <component>control</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jury_maneuver._Sample Stream_12.</name>
          <source_connector_path>
            <connector/>
            <component>jury_maneuver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>jury_manouver_list</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_12._control.in_maneuver_list</name>
          <source_connector_path>
            <connector/>
            <component>jury_manouver_list</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_maneuver_list</connector>
            <component>control</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>false</sync>
        </connection>
        <connection>
          <name>control.out_jury_status_Sample Stream_13.</name>
          <source_connector_path>
            <connector>out_jury_status</connector>
            <component>control</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>jury_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_13._jury_status.</name>
          <source_connector_path>
            <connector/>
            <component>jury_out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>jury_status</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ConverterWheels.vehicle_speed_Sample Stream_1.</name>
          <source_connector_path>
            <connector>vehicle_speed</connector>
            <component>ConverterWheels</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._Sample Stream_14.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_14</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_14._positioning.speed_in</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_14</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed_in</connector>
            <component>positioning</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>perception.out_center_lane_wp_Sample Stream_17.</name>
          <source_connector_path>
            <connector>out_center_lane_wp</connector>
            <component>perception</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>perception_waypoints</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_17._control.center_lane_wp_in</name>
          <source_connector_path>
            <connector/>
            <component>perception_waypoints</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>center_lane_wp_in</connector>
            <component>control</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>perception.network_output_birdseye_out.</name>
          <source_connector_path>
            <connector>network_output</connector>
            <component>perception</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>network_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>network_out._control.network_in_ctrl</name>
          <source_connector_path>
            <connector/>
            <component>network_out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>network_in_ctrl</connector>
            <component>control</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>perception.birdseye_image_birdseye_image.</name>
          <source_connector_path>
            <connector>birdseye_image</connector>
            <component>perception</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>birdseye_image</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>birdseye_image._control.birdseye_in_ctrl</name>
          <source_connector_path>
            <connector/>
            <component>birdseye_image</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>birdseye_in_ctrl</connector>
            <component>control</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>WheelSpeedController.actuator_output_Sample Stream_7.</name>
          <source_connector_path>
            <connector>actuator_output</connector>
            <component>WheelSpeedController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._WheelSpeedController.measured_vehicle_speed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>measured_vehicle_speed</connector>
            <component>WheelSpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._WheelSpeedController.desired_vehicle_speed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>desired_vehicle_speed</connector>
            <component>WheelSpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ls_data._perception.ls_data_in</name>
          <source_connector_path>
            <connector/>
            <component>ls_data</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ls_data_in</connector>
            <component>perception</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ls_in._ls_data.</name>
          <source_connector_path>
            <connector/>
            <component>ls_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>ls_data</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ls_data._control.ls_in_ctrl</name>
          <source_connector_path>
            <connector/>
            <component>ls_data</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ls_in_ctrl</connector>
            <component>control</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>perception.det_data_out_det_info.</name>
          <source_connector_path>
            <connector>det_data_out</connector>
            <component>perception</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>det_info</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>perception.ls_seg_out_ls_seg.</name>
          <source_connector_path>
            <connector>ls_seg_out</connector>
            <component>perception</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>ls_seg</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ls_seg._control.ls_seg_in</name>
          <source_connector_path>
            <connector/>
            <component>ls_seg</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ls_seg_in</connector>
            <component>control</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>det_info._control.det_data_in</name>
          <source_connector_path>
            <connector/>
            <component>det_info</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>det_data_in</connector>
            <component>control</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_7._speed_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>control_filter_graph</name>
      <filters>
        <filter>
          <name>StateMachine</name>
          <class_id>state_machine.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>carpos_in</name>
            </pin>
            <pin>
              <name>roadSigns</name>
            </pin>
            <pin>
              <name>ls_data</name>
            </pin>
            <pin>
              <name>jc_jury_struct_in</name>
            </pin>
            <pin>
              <name>jc_man_list_in</name>
            </pin>
            <pin>
              <name>road_sign_map</name>
            </pin>
            <pin>
              <name>network_in</name>
            </pin>
            <pin>
              <name>birdseye_in</name>
            </pin>
            <pin>
              <name>points</name>
            </pin>
            <pin>
              <name>ls_seg_in</name>
            </pin>
            <pin>
              <name>seg_obs_data</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>video_local_map</name>
            </pin>
            <pin>
              <name>speed_out</name>
            </pin>
            <pin>
              <name>jc_driver_struct_out</name>
            </pin>
            <pin>
              <name>curvature</name>
            </pin>
            <pin>
              <name>planner_costmap</name>
            </pin>
            <pin>
              <name>lights_head</name>
            </pin>
            <pin>
              <name>lights_ind_left</name>
            </pin>
            <pin>
              <name>lights_ind_right</name>
            </pin>
            <pin>
              <name>lights_brake</name>
            </pin>
            <pin>
              <name>lights_hazard</name>
            </pin>
            <pin>
              <name>lights_reverse</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>trigger</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Video_LocalMap</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>SteeringCalibration</name>
          <class_id>calibration_xml.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input_value</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output_value</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Universal Thrift Filter</name>
          <class_id>universal_thrift.communication.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>position_in</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners>
            <runner>
              <name>thriftfilter_runner</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Birdseye_in_ctrl</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Video_Planner</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports>
        <data_port>
          <name>pos_in_ctrl</name>
        </data_port>
        <data_port>
          <name>ls_in_ctrl</name>
        </data_port>
        <data_port>
          <name>road_signs_in_ctrl</name>
        </data_port>
        <data_port>
          <name>in_maneuver_list</name>
        </data_port>
        <data_port>
          <name>jury_cmd_ctrl</name>
        </data_port>
        <data_port>
          <name>jury_road_signs_ctrl</name>
        </data_port>
        <data_port>
          <name>network_in_ctrl</name>
        </data_port>
        <data_port>
          <name>birdseye_in_ctrl</name>
        </data_port>
        <data_port>
          <name>center_lane_wp_in</name>
        </data_port>
        <data_port>
          <name>det_data_in</name>
        </data_port>
        <data_port>
          <name>ls_seg_in</name>
        </data_port>
      </input_data_ports>
      <output_data_ports>
        <data_port>
          <name>steering_out</name>
        </data_port>
        <data_port>
          <name>desired_speed_out</name>
        </data_port>
        <data_port>
          <name>out_jury_status</name>
        </data_port>
      </output_data_ports>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports/>
      <streaming_out_ports>
        <streaming_out_port>
          <name>out_l_head</name>
          <portname>out_l_head</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>out_l_ind_left</name>
          <portname>out_l_ind_left</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>out_l_ind_right</name>
          <portname>out_l_ind_right</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>out_l_brake</name>
          <portname>out_l_brake</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>out_l_reverse</name>
          <portname>out_l_reverse</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>out_l_hazard</name>
          <portname>out_l_hazard</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>local_map_video</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_5</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_6</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>speed_out_ctrl</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_7</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_8</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_9</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_10</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>input_network_statemachine</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_11</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_12</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>planner_video</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners>
        <active_runner>
          <name>Timer Runner</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
      </active_runners>
      <binding_proxys/>
      <connections>
        <connection>
          <name>Sample Stream._StateMachine.carpos_in</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>carpos_in</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>road_signs_in_ctrl._Sample Stream_2.</name>
          <source_connector_path>
            <connector/>
            <component>road_signs_in_ctrl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._StateMachine.roadSigns</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>roadSigns</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._StateMachine.ls_data</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ls_data</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._Video_LocalMap.video</name>
          <source_connector_path>
            <connector/>
            <component>local_map_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Video_LocalMap</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._SteeringCalibration.input_value</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input_value</connector>
            <component>SteeringCalibration</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SteeringCalibration.output_value_Sample Stream_6.</name>
          <source_connector_path>
            <connector>output_value</connector>
            <component>SteeringCalibration</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>pos_in_ctrl._Sample Stream.</name>
          <source_connector_path>
            <connector/>
            <component>pos_in_ctrl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateMachine.speed_out_speed_out_keyboard_ctrl.</name>
          <source_connector_path>
            <connector>speed_out</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out_ctrl</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ls_in_ctrl._Sample Stream_3.</name>
          <source_connector_path>
            <connector/>
            <component>ls_in_ctrl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Universal Thrift Filter.position_in</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>position_in</connector>
            <component>Universal Thrift Filter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>in_maneuver_list._Sample Stream_7.</name>
          <source_connector_path>
            <connector/>
            <component>in_maneuver_list</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jury_cmd_ctrl._Sample Stream_8.</name>
          <source_connector_path>
            <connector/>
            <component>jury_cmd_ctrl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_8</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_8._StateMachine.jc_jury_struct_in</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_8</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jc_jury_struct_in</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_7._StateMachine.jc_man_list_in</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jc_man_list_in</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jury_road_signs_ctrl._Sample Stream_9.</name>
          <source_connector_path>
            <connector/>
            <component>jury_road_signs_ctrl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_9</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateMachine.jc_driver_struct_out_Sample Stream_10.</name>
          <source_connector_path>
            <connector>jc_driver_struct_out</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_10</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_10._out_jury_status.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_10</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>out_jury_status</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_9._StateMachine.road_sign_map</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_9</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>road_sign_map</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>network_in_ctrl._Sample Stream_11.</name>
          <source_connector_path>
            <connector/>
            <component>network_in_ctrl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>input_network_statemachine</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_11._StateMachine.network_in</name>
          <source_connector_path>
            <connector/>
            <component>input_network_statemachine</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>network_in</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>birdseye_in_ctrl._Sample Stream_11.</name>
          <source_connector_path>
            <connector/>
            <component>birdseye_in_ctrl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_11</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_11._StateMachine.birdseye_in</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_11</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>birdseye_in</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner._Universal Thrift Filter.thriftfilter_runner</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>thriftfilter_runner</connector>
            <component>Universal Thrift Filter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_6._steering_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateMachine.curvature_Sample Stream_5.</name>
          <source_connector_path>
            <connector>curvature</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>center_lane_wp_in._Sample Stream_12.</name>
          <source_connector_path>
            <connector/>
            <component>center_lane_wp_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_12</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_12._StateMachine.points</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_12</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>points</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>speed_out_ctrl._desired_speed_out.</name>
          <source_connector_path>
            <connector/>
            <component>speed_out_ctrl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>desired_speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateMachine.video_local_map_local_map_video.</name>
          <source_connector_path>
            <connector>video_local_map</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>local_map_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_11._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_11</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Birdseye_in_ctrl</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateMachine.planner_costmap_Sample Stream_4.</name>
          <source_connector_path>
            <connector>planner_costmap</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>planner_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._Video_Planner.video</name>
          <source_connector_path>
            <connector/>
            <component>planner_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Video_Planner</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateMachine.lights_head_out_l_head.</name>
          <source_connector_path>
            <connector>lights_head</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>out_l_head</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateMachine.lights_ind_left_out_l_ind_left.</name>
          <source_connector_path>
            <connector>lights_ind_left</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>out_l_ind_left</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateMachine.lights_ind_right_out_l_ind_right.</name>
          <source_connector_path>
            <connector>lights_ind_right</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>out_l_ind_right</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateMachine.lights_brake_out_l_brake.</name>
          <source_connector_path>
            <connector>lights_brake</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>out_l_brake</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateMachine.lights_hazard_out_l_hazard.</name>
          <source_connector_path>
            <connector>lights_hazard</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>out_l_hazard</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>StateMachine.lights_reverse_out_l_reverse.</name>
          <source_connector_path>
            <connector>lights_reverse</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>out_l_reverse</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ls_seg_in._Sample Stream_1.</name>
          <source_connector_path>
            <connector/>
            <component>ls_seg_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._StateMachine.ls_seg_in</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ls_seg_in</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>det_data_in._Sample Stream_4.</name>
          <source_connector_path>
            <connector/>
            <component>det_data_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._StateMachine.seg_obs_data</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>seg_obs_data</connector>
            <component>StateMachine</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>perception</name>
      <filters>
        <filter>
          <name>Neural Network Thrift Filter</name>
          <class_id>NN.thrift.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>image_in</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>image_out</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>nn_thriftfilter_runner</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Birdseye Transform</name>
          <class_id>birdseye_transform.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
            <pin>
              <name>PointList</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>birdseye_visualization</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Birdseye Transform_raw_video</name>
          <class_id>birdseye_transform.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>birdseye_raw_image_display</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaserSegmentation</name>
          <class_id>laser_segmentation.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
            <pin>
              <name>laser_scanner</name>
            </pin>
            <pin>
              <name>raw_video_in</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>laser_seg_out</name>
            </pin>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>trigger</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>ObstacleFusionFilter</name>
          <class_id>obstacle_fusion.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>ls_seg_in</name>
            </pin>
            <pin>
              <name>us_struct</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>obs_data_out</name>
            </pin>
            <pin>
              <name>ls_seg_out</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>trigger</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>ls_seg_video</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Scale Crop</name>
          <class_id>scale_crop.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports>
        <data_port>
          <name>undist_video</name>
        </data_port>
        <data_port>
          <name>ls_data_in</name>
        </data_port>
      </input_data_ports>
      <output_data_ports>
        <data_port>
          <name>network_output</name>
        </data_port>
        <data_port>
          <name>out_center_lane_wp</name>
        </data_port>
        <data_port>
          <name>birdseye_image</name>
        </data_port>
        <data_port>
          <name>ls_seg_out</name>
        </data_port>
        <data_port>
          <name>det_data_out</name>
        </data_port>
      </output_data_ports>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>ultrasonic_struct_in</name>
          <portname>ultrasonic_struct_in</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>perception_undist_video</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>output_network</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>nn_prediction</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>nn_waypoints</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>birdseye_raw_image</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laser_seg_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>ls_seg_video_stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>scaled_cropped_video</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners>
        <active_runner>
          <name>Timer Runner</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
        <active_runner>
          <name>Timer Runner_1</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
      </active_runners>
      <binding_proxys/>
      <connections>
        <connection>
          <name>undist_video._Sample Stream_1.</name>
          <source_connector_path>
            <connector/>
            <component>undist_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>perception_undist_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._Birdseye Transform.input</name>
          <source_connector_path>
            <connector/>
            <component>nn_prediction</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Birdseye Transform</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._network_output.</name>
          <source_connector_path>
            <connector/>
            <component>output_network</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>network_output</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Neural Network Thrift Filter.image_out_Sample Stream_1.</name>
          <source_connector_path>
            <connector>image_out</connector>
            <component>Neural Network Thrift Filter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>nn_prediction</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Birdseye Transform.PointList_Sample Stream_2.</name>
          <source_connector_path>
            <connector>PointList</connector>
            <component>Birdseye Transform</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>nn_waypoints</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._out_center_lane_wp.</name>
          <source_connector_path>
            <connector/>
            <component>nn_waypoints</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>out_center_lane_wp</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Birdseye Transform.output_output_network.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Birdseye Transform</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>output_network</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>output_network._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>output_network</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>birdseye_visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Birdseye Transform_raw_video.output_birdseye_raw_image.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Birdseye Transform_raw_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>birdseye_raw_image</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>birdseye_raw_image._birdseye_raw_image_display.video</name>
          <source_connector_path>
            <connector/>
            <component>birdseye_raw_image</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>birdseye_raw_image_display</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>birdseye_raw_image._birdseye_image.</name>
          <source_connector_path>
            <connector/>
            <component>birdseye_raw_image</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>birdseye_image</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>nn_prediction._LaserSegmentation.input</name>
          <source_connector_path>
            <connector/>
            <component>nn_prediction</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>LaserSegmentation</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>false</sync>
        </connection>
        <connection>
          <name>ls_data_in._Sample Stream.</name>
          <source_connector_path>
            <connector/>
            <component>ls_data_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._LaserSegmentation.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>LaserSegmentation</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaserSegmentation.laser_seg_out_Sample Stream_1.</name>
          <source_connector_path>
            <connector>laser_seg_out</connector>
            <component>LaserSegmentation</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>laser_seg_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._ObstacleFusionFilter.ls_seg_in</name>
          <source_connector_path>
            <connector/>
            <component>laser_seg_out</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ls_seg_in</connector>
            <component>ObstacleFusionFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ls_seg_video_stream._ls_seg_video.video</name>
          <source_connector_path>
            <connector/>
            <component>ls_seg_video_stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>ls_seg_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaserSegmentation.output_ls_seg_video_stream.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>LaserSegmentation</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>ls_seg_video_stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ultrasonic_struct_in._ObstacleFusionFilter.us_struct</name>
          <source_connector_path>
            <connector/>
            <component>ultrasonic_struct_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>us_struct</connector>
            <component>ObstacleFusionFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ObstacleFusionFilter.obs_data_out_Sample Stream_1.</name>
          <source_connector_path>
            <connector>obs_data_out</connector>
            <component>ObstacleFusionFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._det_data_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>det_data_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ObstacleFusionFilter.ls_seg_out_Sample Stream_2.</name>
          <source_connector_path>
            <connector>ls_seg_out</connector>
            <component>ObstacleFusionFilter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._ls_seg_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>ls_seg_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner._ObstacleFusionFilter.trigger</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>trigger</connector>
            <component>ObstacleFusionFilter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>perception_undist_video._Scale Crop.input</name>
          <source_connector_path>
            <connector/>
            <component>perception_undist_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Scale Crop</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Scale Crop.output_scaled_cropped_video.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Scale Crop</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>scaled_cropped_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>scaled_cropped_video._Birdseye Transform_raw_video.input</name>
          <source_connector_path>
            <connector/>
            <component>scaled_cropped_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Birdseye Transform_raw_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>scaled_cropped_video._Neural Network Thrift Filter.image_in</name>
          <source_connector_path>
            <connector/>
            <component>scaled_cropped_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>image_in</connector>
            <component>Neural Network Thrift Filter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>scaled_cropped_video._LaserSegmentation.raw_video_in</name>
          <source_connector_path>
            <connector/>
            <component>scaled_cropped_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>raw_video_in</connector>
            <component>LaserSegmentation</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner_1._LaserSegmentation.trigger</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>trigger</connector>
            <component>LaserSegmentation</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>positioning</name>
      <filters>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Marker Positioning_1</name>
          <class_id>marker_positioning.filter.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>imu</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>road_sign_map</name>
            </pin>
            <pin>
              <name>road_sign_ext</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>position</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>AudiMarkerPos</name>
          <class_id>demo_qt_media_description_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>pos</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Audi Marker Detector</name>
          <class_id>marker_detector.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
            <pin>
              <name>road_sign_ext</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Sensor Visualization</name>
          <class_id>sensor_visualization.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>iner_meas_unit</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>marker_detector_video</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports>
        <data_port>
          <name>basler_rgb</name>
        </data_port>
        <data_port>
          <name>imu_data</name>
        </data_port>
        <data_port>
          <name>speed_in</name>
        </data_port>
        <data_port>
          <name>in_road_sign_map</name>
        </data_port>
      </input_data_ports>
      <output_data_ports>
        <data_port>
          <name>position</name>
        </data_port>
        <data_port>
          <name>undist_out</name>
        </data_port>
        <data_port>
          <name>detected_marker</name>
        </data_port>
      </output_data_ports>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports/>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_5</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_6</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_7</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_8</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_9</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_10</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>imu_data._Sample Stream_2.</name>
          <source_connector_path>
            <connector/>
            <component>imu_data</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>speed_in._Sample Stream_3.</name>
          <source_connector_path>
            <connector/>
            <component>speed_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>undist_video._Sample Stream_5.</name>
          <source_connector_path>
            <connector/>
            <component>basler_rgb</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_5</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_Sample Stream.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._undist_out.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>undist_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_7._detected_marker.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>detected_marker</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>in_road_sign_map._Sample Stream_8.</name>
          <source_connector_path>
            <connector/>
            <component>in_road_sign_map</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_8</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_8._Marker Positioning_1.road_sign_map</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_8</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>road_sign_map</connector>
            <component>Marker Positioning_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Marker Positioning_1.position_Sample Stream_9.</name>
          <source_connector_path>
            <connector>position</connector>
            <component>Marker Positioning_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_9</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_9._AudiMarkerPos.pos</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_9</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>pos</connector>
            <component>AudiMarkerPos</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Audi Marker Detector.road_sign_ext_Sample Stream_10.</name>
          <source_connector_path>
            <connector>road_sign_ext</connector>
            <component>Audi Marker Detector</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_10</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_10._Marker Positioning_1.road_sign_ext</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_10</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>road_sign_ext</connector>
            <component>Marker Positioning_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._position.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>position</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Audi Marker Detector.output_Sample Stream_6.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Audi Marker Detector</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_9._Sample Stream_4.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_9</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Audi Marker Detector.input</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Audi Marker Detector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._Marker Positioning_1.imu</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>imu</connector>
            <component>Marker Positioning_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._Marker Positioning_1.speed</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed</connector>
            <component>Marker Positioning_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_10._Sample Stream_7.</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_10</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_6._marker_detector_video.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_6</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>marker_detector_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
  </graphs>
  <streaming_graphs>
    <streaming_graph>
      <name>recording_streaming_graph</name>
      <streaming_sources>
        <streaming_source>
          <name>Basler Camera</name>
          <class_id>basler_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Laser Scanner</name>
          <class_id>laser_scanner.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Arduino EgoMotion Sensor</name>
          <class_id>arduino_egomotion_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>iner_meas_unit</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>video_rgb_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>imu_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>wheel_left_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>wheel_right_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>ls_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports/>
      <streaming_sinks>
        <streaming_sink>
          <name>ADTFDAT File Recorder</name>
          <class_id>adtfdat_file_recorder.streaming_sink.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
            <pin>
              <name>imu</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
            <pin>
              <name>ls_output</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <connections>
        <connection>
          <name>Basler Camera.video_rgb_Sample Stream.</name>
          <source_connector_path>
            <connector>video_rgb</connector>
            <component>Basler Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Filter Graph Dock.video_rgb_in</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video_rgb_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._ADTFDAT File Recorder.video_rgb</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video_rgb</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.iner_meas_unit_ADTFDAT File Recorder.imu</name>
          <source_connector_path>
            <connector>iner_meas_unit</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>imu</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Laser Scanner.output_ADTFDAT File Recorder.ls_output</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Laser Scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ls_output</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_left_ADTFDAT File Recorder.wheel_left</name>
          <source_connector_path>
            <connector>wheel_left</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_left</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_right_ADTFDAT File Recorder.wheel_right</name>
          <source_connector_path>
            <connector>wheel_right</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_right</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>playback_streaming_graph</name>
      <streaming_sources>
        <streaming_source>
          <name>ADTFDAT File Player</name>
          <class_id>adtfdat_file_player.streaming_source.adtf.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>ls_output</name>
            </pin>
            <pin>
              <name>imu</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
            <pin>
              <name>video_rgb</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>video_rgb_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>imu_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>wheel_left_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>wheel_right_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>ls_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports/>
      <streaming_sinks/>
      <sample_streams/>
      <connections>
        <connection>
          <name>ADTFDAT File Player.video_rgb_Filter Graph Dock.video_rgb_in</name>
          <source_connector_path>
            <connector>video_rgb</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video_rgb_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.imu_Filter Graph Dock.imu_in</name>
          <source_connector_path>
            <connector>imu</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>imu_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.wheel_left_Filter Graph Dock.wheel_left_in</name>
          <source_connector_path>
            <connector>wheel_left</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_left_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.wheel_right_Filter Graph Dock.wheel_right_in</name>
          <source_connector_path>
            <connector>wheel_right</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_right_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.ls_output_Filter Graph Dock.ls_in</name>
          <source_connector_path>
            <connector>ls_output</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ls_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>live_streaming_graph</name>
      <streaming_sources>
        <streaming_source>
          <name>Arduino EgoMotion Sensor</name>
          <class_id>arduino_egomotion_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>iner_meas_unit</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Basler Camera</name>
          <class_id>basler_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Laser Scanner</name>
          <class_id>laser_scanner.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Jury Communication TCP Receiver</name>
          <class_id>jury_communication_tcp.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>jury_struct</name>
            </pin>
            <pin>
              <name>maneuver_list</name>
            </pin>
            <pin>
              <name>road_sign_map</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers>
            <pin>
              <name>socket</name>
            </pin>
          </binding_servers>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Arduino Ultrasonic Sensor</name>
          <class_id>arduino_us_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>video_rgb_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>imu_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>wheel_left_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>wheel_right_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>ls_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>jury_maneuver</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>jury_road_signs</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>jury_cmds</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>ultrasonic_struct_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports>
        <sample_stream>
          <name>steering_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>speed_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>jury_status</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>out_l_head</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>out_l_ind_left</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>out_l_ind_right</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>out_l_brake</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>out_l_reverse</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>out_l_hazard</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_out_ports>
      <streaming_sinks>
        <streaming_sink>
          <name>Arduino Actuator</name>
          <class_id>arduino_actuator.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>steering</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>head_light</name>
            </pin>
            <pin>
              <name>turn_signal_left</name>
            </pin>
            <pin>
              <name>turn_signal_right</name>
            </pin>
            <pin>
              <name>brake_light</name>
            </pin>
            <pin>
              <name>reverse_light</name>
            </pin>
            <pin>
              <name>hazard_light</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
        <streaming_sink>
          <name>Jury Communication TCP Sender</name>
          <class_id>jury_communication_tcp.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>driver_struct</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients>
            <pin>
              <name>socket</name>
            </pin>
          </binding_clients>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams/>
      <connections>
        <connection>
          <name>Basler Camera.video_rgb_Filter Graph Dock.video_rgb_in</name>
          <source_connector_path>
            <connector>video_rgb</connector>
            <component>Basler Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video_rgb_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.iner_meas_unit_Filter Graph Dock.imu_in</name>
          <source_connector_path>
            <connector>iner_meas_unit</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>imu_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_left_Filter Graph Dock.wheel_left_in</name>
          <source_connector_path>
            <connector>wheel_left</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_left_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_right_Filter Graph Dock.wheel_right_in</name>
          <source_connector_path>
            <connector>wheel_right</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_right_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Laser Scanner.output_Filter Graph Dock.ls_in</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Laser Scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ls_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.steering_out_Arduino Actuator.steering</name>
          <source_connector_path>
            <connector>steering_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steering</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.speed_out_Arduino Actuator.speed</name>
          <source_connector_path>
            <connector>speed_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.socket_Binding Proxy.</name>
          <source_connector_path>
            <connector>socket</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Binding Proxy</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Binding Proxy._Jury Communication TCP Sender.socket</name>
          <source_connector_path>
            <connector/>
            <component>Binding Proxy</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>socket</connector>
            <component>Jury Communication TCP Sender</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.jury_status_Jury Communication TCP Sender.driver_struct</name>
          <source_connector_path>
            <connector>jury_status</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>driver_struct</connector>
            <component>Jury Communication TCP Sender</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.jury_struct_Filter Graph Dock.jury_cmds</name>
          <source_connector_path>
            <connector>jury_struct</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jury_cmds</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.maneuver_list_Filter Graph Dock.jury_maneuver</name>
          <source_connector_path>
            <connector>maneuver_list</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jury_maneuver</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.road_sign_map_Filter Graph Dock.jury_road_signs</name>
          <source_connector_path>
            <connector>road_sign_map</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jury_road_signs</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino Ultrasonic Sensor.ultrasonic_struct_Filter Graph Dock.ultrasonic_struct_in</name>
          <source_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Arduino Ultrasonic Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonic_struct_in</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.out_l_head_Arduino Actuator.head_light</name>
          <source_connector_path>
            <connector>out_l_head</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>head_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.out_l_ind_left_Arduino Actuator.turn_signal_left</name>
          <source_connector_path>
            <connector>out_l_ind_left</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>turn_signal_left</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.out_l_ind_right_Arduino Actuator.turn_signal_right</name>
          <source_connector_path>
            <connector>out_l_ind_right</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>turn_signal_right</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.out_l_brake_Arduino Actuator.brake_light</name>
          <source_connector_path>
            <connector>out_l_brake</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>brake_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.out_l_reverse_Arduino Actuator.reverse_light</name>
          <source_connector_path>
            <connector>out_l_reverse</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>reverse_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.out_l_hazard_Arduino Actuator.hazard_light</name>
          <source_connector_path>
            <connector>out_l_hazard</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>hazard_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys>
        <binding_proxy>
          <name>Binding Proxy</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
      </binding_proxys>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
  </streaming_graphs>
</graph_file>
